{"version":3,"sources":["hooks/http.hook.js","context/auth.context.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","Date","date","toLocaleDateString","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","onClick","disabled","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49992310.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Somewhare is wrong try again !\");\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false,\r\n});\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div\r\n    style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"2rem\" }}\r\n  >\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">No any links !</p>;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>№</th>\r\n          <th>Original link</th>\r\n          <th>Abbreviated</th>\r\n          <th>Date</th>\r\n          <th>Open</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {links.map((link, index) => {\r\n          return (\r\n            <tr key={link._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{link.from}</td>\r\n              <td>{link.to}</td>\r\n              <td>{new Date(link.date).toLocaleDateString()}</td>\r\n              <td>\r\n                <Link to={`/detail/${link._id}`}>Open</Link>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useState, useContext, useCallback, useEffect } from \"react\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { AuthContext } from \"../context/auth.context\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { LinksList } from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const { loading, request } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(\"/api/link\", \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setLinks(fetched);\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>{!loading && <LinksList links={links} />}</>;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../context/auth.context\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const pressHandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          {\r\n            from: link,\r\n          },\r\n          { Authorization: `Bearer ${auth.token}` }\r\n        );\r\n        history.push(`/detail/${data.link._id}`);\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Put the link\"\r\n            id=\"link\"\r\n            type=\"text\"\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"link\">Write the link</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n  return (\r\n    <>\r\n      <h2>Link</h2>\r\n\r\n      <p>\r\n        Your link:{\" \"}\r\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.to}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        From:{\" \"}\r\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.from}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Count clicks to link: <strong>{link.clicks}</strong>\r\n      </p>\r\n      <p>\r\n        Date created:{\" \"}\r\n        <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LinkCard } from \"../components/LinkCard\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { AuthContext } from \"../context/auth.context\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const DetailPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHttp();\r\n  const [link, setLink] = useState(null);\r\n  const linkId = useParams().id;\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      setLink(fetched);\r\n    } catch (e) {}\r\n  }, [token, linkId, request]);\r\n\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>{!loading && link && <LinkCard link={link} />}</>;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/auth.context\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const message = useMessage();\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/register\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\r\n      auth.login(data.token, data.userId);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h1 className=\"center\">Cut the Link</h1>\r\n      <div className=\"col s6 offset-s3\">\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Authorization</span>\r\n            <div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Write email\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className=\"yellow-input\"\r\n                  value={form.email}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"first_name\">Email</label>\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Write password\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"yellow-input\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"first_name\">Email</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              style={{ marginRight: 10 }}\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n            <button\r\n              className=\"btn grey lighten-1 black-text\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Registration\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback((text) => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        userId: id,\r\n        token: jwtToken,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth.context\";\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const logoutHandler = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: \"0 2rem\" }}>\r\n        <span className=\"brand-logo\">Cut the link</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/create\">Create</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/links\">Links</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { useRoutes } from \"./routes\";\r\nimport { useAuth } from \"./hooks/auth.hook\";\r\nimport { AuthContext } from \"./context/auth.context\";\r\nimport { Navbar } from \"./components/Navbar\";\r\nimport { Loader } from \"./components/Loader\";\r\nimport \"materialize-css\";\r\n\r\nfunction App() {\r\n  const { token, login, logout, userId, ready } = useAuth();\r\n\r\n  const isAuthenticated = !!token;\r\n\r\n  const routes = useRoutes(isAuthenticated);\r\n\r\n  if(!ready){\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n        isAuthenticated,\r\n      }}\r\n    >\r\n      <Router>\r\n        {isAuthenticated && <Navbar />}\r\n        <div className=\"container\">{routes}</div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport { LinksPage } from './pages/LinksPage'\r\nimport { CreatePage } from './pages/CreatePage'\r\nimport { DetailPage } from './pages/DetailPage'\r\nimport { AuthPage } from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage />\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage />\r\n                </Route>\r\n                <Route path=\"/detail/:id\" exact>\r\n                    <DetailPage />\r\n                </Route>\r\n                <Redirect to=\"/create\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}